<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Red Hat on ADDZEY.DEV</title>
    <link>https://addzey.dev/tags/red-hat/</link>
    <description>Recent content in Red Hat on ADDZEY.DEV</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Adam Rogers</copyright>
    <lastBuildDate>Sun, 28 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://addzey.dev/tags/red-hat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RHCSA Study Notes</title>
      <link>https://addzey.dev/rhcsa/</link>
      <pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://addzey.dev/rhcsa/</guid>
      <description>Introduction Exam is booked in for 26/09/23
I&amp;rsquo;ll be updating this as I go through practice tasks before taking the RHCSA exam!
Understand and use essential tools Access a shell prompt and issue commands with correct syntax I would say this objective is well covered throughout, so I wont add any explanations or examples here
Use input-output redirection (&amp;gt;, &amp;raquo;, |, 2&amp;gt;, etc.) STDIN (user) -&amp;gt; CMD -&amp;gt; STDOUT (console/screen)</description>
      <content>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Exam is booked in for &lt;strong&gt;26/09/23&lt;/strong&gt;&lt;br&gt;
I&amp;rsquo;ll be updating this as I go through practice tasks before taking the RHCSA exam!&lt;/p&gt;
&lt;h2 id=&#34;understand-and-use-essential-tools&#34;&gt;Understand and use essential tools&lt;/h2&gt;
&lt;h3 id=&#34;access-a-shell-prompt-and-issue-commands-with-correct-syntax&#34;&gt;Access a shell prompt and issue commands with correct syntax&lt;/h3&gt;
&lt;p&gt;I would say this objective is well covered throughout, so I wont add any explanations or examples here&lt;/p&gt;
&lt;h3 id=&#34;use-input-output-redirection----2-etc&#34;&gt;Use input-output redirection (&amp;gt;, &amp;raquo;, |, 2&amp;gt;, etc.)&lt;/h3&gt;
&lt;p&gt;STDIN (user) &lt;strong&gt;-&amp;gt;&lt;/strong&gt; CMD &lt;strong&gt;-&amp;gt;&lt;/strong&gt; STDOUT (console/screen)&lt;/p&gt;
&lt;p&gt;Read a file as standard input = &amp;ldquo;&lt;strong&gt;&amp;lt;&lt;/strong&gt;&amp;rdquo; which changes the flow to &amp;lsquo;CMD &lt;strong&gt;-&amp;gt;&lt;/strong&gt; FILE &lt;strong&gt;-&amp;gt;&lt;/strong&gt; STDOUT&amp;rsquo; with the file replacing STDIN&lt;/p&gt;
&lt;p&gt;Send the standard output to a file = &amp;ldquo;&lt;strong&gt;&amp;gt;&lt;/strong&gt;&amp;rdquo; which changes the flow to &amp;lsquo;STDIN &lt;strong&gt;-&amp;gt;&lt;/strong&gt; CMD &lt;strong&gt;-&amp;gt;&lt;/strong&gt; file&amp;rsquo; with the file now replacing STDOUT&lt;br&gt;
&lt;code&gt;ls &amp;gt; lsresult&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Redirect STDERR (error messages) = &amp;ldquo;&lt;strong&gt;2&amp;gt;&lt;/strong&gt;&amp;rdquo; which sends any error messages to the defined location&lt;br&gt;
&lt;code&gt;ls jibberish 2&amp;gt; errors&lt;/code&gt;&lt;br&gt;
&lt;code&gt;ls jibberish 2&amp;gt; /dev/null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Send the standard output to a file but this time append the file = &amp;ldquo;&lt;strong&gt;&amp;raquo;&lt;/strong&gt;&amp;rdquo; which changes the flow to &amp;lsquo;STDIN &lt;strong&gt;-&amp;gt;&lt;/strong&gt; CMD &lt;strong&gt;-&amp;gt;&lt;/strong&gt; file&amp;rsquo; with the file now replacing STDOUT and the STDOUT will append rather than write/overwrite&lt;br&gt;
&lt;code&gt;ls /etc &amp;gt;&amp;gt; lsetcresultappend&lt;/code&gt;
&lt;code&gt;ls /etc &amp;gt;&amp;gt; lsetcresultappend&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Piping = &amp;ldquo;&lt;strong&gt;|&lt;/strong&gt;&amp;rdquo; will use the result of the previous command as the STDINPUT of another command&lt;br&gt;
&lt;code&gt;ls -l /etc | wc&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;use-grep-and-regular-expressions-to-analyze-text&#34;&gt;Use grep and regular expressions to analyze text&lt;/h3&gt;
&lt;p&gt;Find the text &amp;ldquo;ssh&amp;rdquo; in the output of &amp;lsquo;ps aux&amp;rsquo;: &lt;code&gt;ps aux | grep ssh&lt;/code&gt;&lt;br&gt;
Recursively search for the text &amp;ldquo;root&amp;rdquo; in /etc&amp;quot;: &lt;code&gt;grep -R root /etc&lt;/code&gt;&lt;br&gt;
Find the text &amp;ldquo;adam&amp;rdquo; in /etc/shadow but case-insensitive: &lt;code&gt;grep -i Adam /etc/shadow&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;access-remote-systems-using-ssh&#34;&gt;Access remote systems using SSH&lt;/h3&gt;
&lt;p&gt;Connect to a remote system using SSH: &lt;code&gt;ssh username@10.0.0.1&lt;/code&gt;&lt;br&gt;
Things to keep in mind: &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; which is a record of public keys for hosts you have connected to previously and &lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt; which is the public key for the host you&amp;rsquo;re currently connected to&lt;/p&gt;
&lt;h3 id=&#34;log-in-and-switch-users-in-multiuser-targets&#34;&gt;Log in and switch users in multiuser targets&lt;/h3&gt;
&lt;p&gt;Change virtual terminal: &lt;code&gt;chvt 4&lt;/code&gt; Can also be done with CTL+ALT+F[1-6] when using console or phsyical logins&lt;br&gt;
Use &amp;ldquo;w&amp;rdquo; command to see all logged in users: &lt;code&gt;w&lt;/code&gt;&lt;br&gt;
Use &amp;ldquo;su&amp;rdquo; to change user to root: &lt;code&gt;su -&lt;/code&gt;&lt;br&gt;
Use &amp;ldquo;sudo&amp;rdquo; to run commands as root: &lt;code&gt;sudo command -options&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;archive-compress-unpack-and-uncompress-files-using-tar-star-gzip-and-bzip2&#34;&gt;Archive, compress, unpack, and uncompress files using tar, star, gzip, and bzip2&lt;/h3&gt;
&lt;p&gt;Create an XZ compressed archive of the home folder: &lt;code&gt;tar cJvf homefolder.tar.xz /home&lt;/code&gt;&lt;br&gt;
Extract a compressed archive into a folder: &lt;code&gt;tar xvf homefolder.tar.xz -C /tmp/archive&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-and-edit-text-files&#34;&gt;Create and edit text files&lt;/h3&gt;
&lt;p&gt;Replace all occurrences of a word in a text file: &lt;code&gt;sed -i s/originalword/replacementword/g /etc/service.conf&lt;/code&gt;&lt;br&gt;
Using vim is out of scope for these study notes, check out &lt;a href=&#34;https://www.linuxfoundation.org/blog/blog/classic-sysadmin-vim-101-a-beginners-guide-to-vim&#34;&gt;https://www.linuxfoundation.org/blog/blog/classic-sysadmin-vim-101-a-beginners-guide-to-vim&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-delete-copy-and-move-files-and-directories&#34;&gt;Create, delete, copy, and move files and directories&lt;/h3&gt;
&lt;p&gt;Create a directory: &lt;code&gt;mkdir directoryname&lt;/code&gt;&lt;br&gt;
Create a sub directory in directory that doesn&amp;rsquo;t already exist: &lt;code&gt;mkdir -p /tmp/newdir/newdir2&lt;/code&gt;&lt;br&gt;
Copy all files starting with the letter &amp;lsquo;a&amp;rsquo;, &amp;lsquo;b&amp;rsquo; or &amp;lsquo;c&amp;rsquo; from /etc into /tmp/files: &lt;code&gt;cp /etc/[a-c]* /tmp/files&lt;/code&gt;&lt;br&gt;
Move all files starting with the letters &amp;lsquo;a&amp;rsquo; or &amp;lsquo;b&amp;rsquo; to a subfolder: &lt;code&gt;mv [a-b]* /tmp/files/folder1&lt;/code&gt;&lt;br&gt;
Move all files starting with the letter &amp;lsquo;c&amp;rsquo; into a sub folder: &lt;code&gt;mv c* /tmp/files/folder2&lt;/code&gt;&lt;br&gt;
Copy all files smaller than 1KB into a sub folder: &lt;code&gt;find -size -1000c -exec cp {} /tmp/files/folder3 \;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-hard-and-soft-links&#34;&gt;Create hard and soft links&lt;/h3&gt;
&lt;p&gt;Consider hard links as similar to an additional copy of a file&lt;br&gt;
Consider soft/symbolic links as similar to a shortcut to a file&lt;/p&gt;
&lt;p&gt;Hard link &lt;code&gt;ln /etc/hosts /root/hardlinkhosts&lt;/code&gt;&lt;br&gt;
Soft link &lt;code&gt;ln -s /etc/hosts /root/symboliclinkhosts&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;list-set-and-change-standard-ugorwx-permissions&#34;&gt;List, set, and change standard ugo/rwx permissions&lt;/h3&gt;
&lt;h3 id=&#34;locate-read-and-use-system-documentation-including-man-info-and-files-in-usrsharedoc&#34;&gt;Locate, read, and use system documentation including man, info, and files in /usr/share/doc&lt;/h3&gt;
&lt;p&gt;Update mandb to be able to search for text: &lt;code&gt;mandb&lt;/code&gt;&lt;br&gt;
&lt;code&gt;man -k searchtext&lt;/code&gt;&lt;br&gt;
&lt;code&gt;man command&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;more /usr/share/doc/openssh/README&lt;/code&gt;&lt;br&gt;
&lt;code&gt;less /usr/share/doc/lvm2/README&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-simple-shell-scripts&#34;&gt;Create simple shell scripts&lt;/h2&gt;
&lt;h3 id=&#34;conditionally-execute-code-use-of-if-test--etc&#34;&gt;Conditionally execute code (use of: if, test, [], etc.)&lt;/h3&gt;
&lt;h3 id=&#34;use-looping-constructs-for-etc-to-process-file-command-line-input&#34;&gt;Use Looping constructs (for, etc.) to process file, command line input&lt;/h3&gt;
&lt;h3 id=&#34;process-script-inputs-1-2-etc&#34;&gt;Process script inputs ($1, $2, etc.)&lt;/h3&gt;
&lt;h3 id=&#34;processing-output-of-shell-commands-within-a-script&#34;&gt;Processing output of shell commands within a script&lt;/h3&gt;
&lt;h2 id=&#34;operate-running-systems&#34;&gt;Operate running systems&lt;/h2&gt;
&lt;h3 id=&#34;boot-reboot-and-shut-down-a-system-normally&#34;&gt;Boot, reboot, and shut down a system normally&lt;/h3&gt;
&lt;h3 id=&#34;boot-systems-into-different-targets-manually&#34;&gt;Boot systems into different targets manually&lt;/h3&gt;
&lt;h3 id=&#34;interrupt-the-boot-process-in-order-to-gain-access-to-a-system&#34;&gt;Interrupt the boot process in order to gain access to a system&lt;/h3&gt;
&lt;h3 id=&#34;identify-cpumemory-intensive-processes-and-kill-processes&#34;&gt;Identify CPU/memory intensive processes and kill processes&lt;/h3&gt;
&lt;h3 id=&#34;adjust-process-scheduling&#34;&gt;Adjust process scheduling&lt;/h3&gt;
&lt;h3 id=&#34;manage-tuning-profiles&#34;&gt;Manage tuning profiles&lt;/h3&gt;
&lt;h3 id=&#34;locate-and-interpret-system-log-files-and-journals&#34;&gt;Locate and interpret system log files and journals&lt;/h3&gt;
&lt;h3 id=&#34;preserve-system-journals&#34;&gt;Preserve system journals&lt;/h3&gt;
&lt;h3 id=&#34;start-stop-and-check-the-status-of-network-services&#34;&gt;Start, stop, and check the status of network services&lt;/h3&gt;
&lt;h3 id=&#34;securely-transfer-files-between-systems&#34;&gt;Securely transfer files between systems&lt;/h3&gt;
&lt;h2 id=&#34;configure-local-storage&#34;&gt;Configure local storage&lt;/h2&gt;
&lt;h3 id=&#34;list-create-delete-partitions-on-mbr-and-gpt-disks&#34;&gt;List, create, delete partitions on MBR and GPT disks&lt;/h3&gt;
&lt;h3 id=&#34;create-and-remove-physical-volumes&#34;&gt;Create and remove physical volumes&lt;/h3&gt;
&lt;h3 id=&#34;assign-physical-volumes-to-volume-groups&#34;&gt;Assign physical volumes to volume groups&lt;/h3&gt;
&lt;h3 id=&#34;create-and-delete-logical-volumes&#34;&gt;Create and delete logical volumes&lt;/h3&gt;
&lt;h3 id=&#34;configure-systems-to-mount-file-systems-at-boot-by-universally-unique-id-uuid-or-label&#34;&gt;Configure systems to mount file systems at boot by universally unique ID (UUID) or label&lt;/h3&gt;
&lt;h3 id=&#34;add-new-partitions-and-logical-volumes-and-swap-to-a-system-non-destructively&#34;&gt;Add new partitions and logical volumes, and swap to a system non-destructively&lt;/h3&gt;
&lt;h2 id=&#34;create-and-configure-file-systems&#34;&gt;Create and configure file systems&lt;/h2&gt;
&lt;h3 id=&#34;create-mount-unmount-and-use-vfat-ext4-and-xfs-file-systems&#34;&gt;Create, mount, unmount, and use vfat, ext4, and xfs file systems&lt;/h3&gt;
&lt;h3 id=&#34;mount-and-unmount-network-file-systems-using-nfs&#34;&gt;Mount and unmount network file systems using NFS&lt;/h3&gt;
&lt;h3 id=&#34;configure-autofs&#34;&gt;Configure autofs&lt;/h3&gt;
&lt;h3 id=&#34;extend-existing-logical-volumes&#34;&gt;Extend existing logical volumes&lt;/h3&gt;
&lt;h3 id=&#34;create-and-configure-set-gid-directories-for-collaboration&#34;&gt;Create and configure set-GID directories for collaboration&lt;/h3&gt;
&lt;h3 id=&#34;diagnose-and-correct-file-permission-problems&#34;&gt;Diagnose and correct file permission problems&lt;/h3&gt;
&lt;h2 id=&#34;deploy-configure-and-maintain-systems&#34;&gt;Deploy, configure, and maintain systems&lt;/h2&gt;
&lt;h3 id=&#34;schedule-tasks-using-at-and-cron&#34;&gt;Schedule tasks using at and cron&lt;/h3&gt;
&lt;h3 id=&#34;start-and-stop-services-and-configure-services-to-start-automatically-at-boot&#34;&gt;Start and stop services and configure services to start automatically at boot&lt;/h3&gt;
&lt;h3 id=&#34;configure-systems-to-boot-into-a-specific-target-automatically&#34;&gt;Configure systems to boot into a specific target automatically&lt;/h3&gt;
&lt;h3 id=&#34;configure-time-service-clients&#34;&gt;Configure time service clients&lt;/h3&gt;
&lt;h3 id=&#34;install-and-update-software-packages-from-red-hat-network-a-remote-repository-or-from-the-local-file-system&#34;&gt;Install and update software packages from Red Hat Network, a remote repository, or from the local file system&lt;/h3&gt;
&lt;h3 id=&#34;modify-the-system-bootloader&#34;&gt;Modify the system bootloader&lt;/h3&gt;
&lt;h2 id=&#34;manage-basic-networking&#34;&gt;Manage basic networking&lt;/h2&gt;
&lt;h3 id=&#34;configure-ipv4-and-ipv6-addresses&#34;&gt;Configure IPv4 and IPv6 addresses&lt;/h3&gt;
&lt;h3 id=&#34;configure-hostname-resolution&#34;&gt;Configure hostname resolution&lt;/h3&gt;
&lt;h3 id=&#34;configure-network-services-to-start-automatically-at-boot&#34;&gt;Configure network services to start automatically at boot&lt;/h3&gt;
&lt;h3 id=&#34;restrict-network-access-using-firewall-cmdfirewall&#34;&gt;Restrict network access using firewall-cmd/firewall&lt;/h3&gt;
&lt;h2 id=&#34;manage-users-and-groups&#34;&gt;Manage users and groups&lt;/h2&gt;
&lt;h3 id=&#34;create-delete-and-modify-local-user-accounts&#34;&gt;Create, delete, and modify local user accounts&lt;/h3&gt;
&lt;p&gt;Create a user with a comment associated with the account: &lt;code&gt;useradd -c &amp;quot;this is a new user&amp;quot; notadam&lt;/code&gt;&lt;br&gt;
Create a new user without a comment: &lt;code&gt;useradd notadam2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Remove a user: &lt;code&gt;userdel notadam2&lt;/code&gt;&lt;br&gt;
Remove a user and remove their home directory: &lt;code&gt;userdel -r notadam&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specify files to be created in users home directories by default: &lt;strong&gt;/etc/skel&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;change-passwords-and-adjust-password-aging-for-local-user-accounts&#34;&gt;Change passwords and adjust password aging for local user accounts&lt;/h3&gt;
&lt;p&gt;Change the password for your currently logged in account: &lt;code&gt;passwd&lt;/code&gt;&lt;br&gt;
Change the password for another account (requires root): &lt;code&gt;passwd username&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set password aging in &lt;code&gt;/etc/login.defs&lt;/code&gt;&lt;br&gt;
Find the variable named &lt;strong&gt;PASS_MAX_DAYS&lt;/strong&gt;&lt;br&gt;
Setting password aging in /etc/login.defs will only apply to newly created accounts&lt;br&gt;
Set the password age for an existing account: &lt;code&gt;chage username&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-delete-and-modify-local-groups-and-group-memberships&#34;&gt;Create, delete, and modify local groups and group memberships&lt;/h3&gt;
&lt;p&gt;Add user to the group &amp;ldquo;wheel&amp;rdquo;: &lt;code&gt;usermod -aG wheel adam&lt;/code&gt;&lt;br&gt;
Using the -a switch along with the -G switch means it will &lt;strong&gt;append&lt;/strong&gt; group memberships rather than replace&lt;/p&gt;
&lt;p&gt;List members of a group: &lt;code&gt;lid -g groupname&lt;/code&gt;&lt;br&gt;
Delete a group: &lt;code&gt;groupdel groupname&lt;/code&gt;&lt;br&gt;
Change the name of a group: &lt;code&gt;groupmod -n newgroupname oldgroupname&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;configure-superuser-access&#34;&gt;Configure superuser access&lt;/h3&gt;
&lt;h2 id=&#34;manage-security&#34;&gt;Manage security&lt;/h2&gt;
&lt;h3 id=&#34;configure-firewall-settings-using-firewall-cmdfirewalld&#34;&gt;Configure firewall settings using firewall-cmd/firewalld&lt;/h3&gt;
&lt;h3 id=&#34;manage-default-file-permissions&#34;&gt;Manage default file permissions&lt;/h3&gt;
&lt;h3 id=&#34;configure-key-based-authentication-for-ssh&#34;&gt;Configure key-based authentication for SSH&lt;/h3&gt;
&lt;h3 id=&#34;set-enforcing-and-permissive-modes-for-selinux&#34;&gt;Set enforcing and permissive modes for SELinux&lt;/h3&gt;
&lt;h3 id=&#34;list-and-identify-selinux-file-and-process-context&#34;&gt;List and identify SELinux file and process context&lt;/h3&gt;
&lt;h3 id=&#34;restore-default-file-contexts&#34;&gt;Restore default file contexts&lt;/h3&gt;
&lt;h3 id=&#34;manage-selinux-port-labels&#34;&gt;Manage SELinux port labels&lt;/h3&gt;
&lt;h3 id=&#34;use-boolean-settings-to-modify-system-selinux-settings&#34;&gt;Use boolean settings to modify system SELinux settings&lt;/h3&gt;
&lt;h3 id=&#34;diagnose-and-address-routine-selinux-policy-violations&#34;&gt;Diagnose and address routine SELinux policy violations&lt;/h3&gt;
&lt;h2 id=&#34;manage-containers&#34;&gt;Manage containers&lt;/h2&gt;
&lt;h3 id=&#34;find-and-retrieve-container-images-from-a-remote-registry&#34;&gt;Find and retrieve container images from a remote registry&lt;/h3&gt;
&lt;h3 id=&#34;inspect-container-images&#34;&gt;Inspect container images&lt;/h3&gt;
&lt;h3 id=&#34;perform-container-management-using-commands-such-as-podman-and-skopeo&#34;&gt;Perform container management using commands such as podman and skopeo&lt;/h3&gt;
&lt;h3 id=&#34;build-a-container-from-a-containerfile&#34;&gt;Build a container from a Containerfile&lt;/h3&gt;
&lt;h3 id=&#34;perform-basic-container-management-such-as-running-starting-stopping-and-listing-running-containers&#34;&gt;Perform basic container management such as running, starting, stopping, and listing running containers&lt;/h3&gt;
&lt;h3 id=&#34;run-a-service-inside-a-container&#34;&gt;Run a service inside a container&lt;/h3&gt;
&lt;h3 id=&#34;configure-a-container-to-start-automatically-as-a-systemd-service&#34;&gt;Configure a container to start automatically as a systemd service&lt;/h3&gt;
&lt;h3 id=&#34;attach-persistent-storage-to-a-container&#34;&gt;Attach persistent storage to a container&lt;/h3&gt;
</content>
    </item>
    
    <item>
      <title>Homelab</title>
      <link>https://addzey.dev/homelab/</link>
      <pubDate>Sat, 15 Apr 2023 20:42:06 +0930</pubDate>
      
      <guid>https://addzey.dev/homelab/</guid>
      <description>Logging and metrics Router NAS GPU UPS Monitoring stack Prometheus/Grafana/Loki running as rootless containers using Podman
Pod </description>
      <content>&lt;h1 id=&#34;logging-and-metrics&#34;&gt;Logging and metrics&lt;/h1&gt;
&lt;h3 id=&#34;router&#34;&gt;Router&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../Router-2023-04-01_212959.png&#34; alt=&#34;Router&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;nas&#34;&gt;NAS&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../NAS-2023-04-01_213149.png&#34; alt=&#34;NAS&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;gpu&#34;&gt;GPU&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../GPU-2023-07-24-120817.png&#34; alt=&#34;GPU&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ups&#34;&gt;UPS&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../UPS-2023-04-01_213311.png&#34; alt=&#34;UPS&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;monitoring-stack&#34;&gt;Monitoring stack&lt;/h1&gt;
&lt;p&gt;Prometheus/Grafana/Loki running as rootless containers using Podman&lt;/p&gt;
&lt;h3 id=&#34;pod&#34;&gt;Pod&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../Monitoring_Stack-2023-04-01_214146.png&#34; alt=&#34;POD&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
